def welcome():
    """
    Task 1:
    """
    # TODO: Your code here
    x = 'Solar Record Management System'
    print("-" * 30, x, "-" * 30)

welcome()

def menu():
    """
    Task 2:
    """
    # TODO: Your code here
    ans = True
    while ans:
        x = 'Main Menu'
        print("-" * len(x), x, "-" * len(x))
        print("""
        1.Load Data
        2.Process Data
        3.Visualise Data
        4.Save Data
        5.Exit
        """)
        ans = input("Please input string as display above on main menu, e.g.\"Load Data\":- ")
        if ans == "Load Data":
            print("\n 1"), print("Load Data has started"), print("Load Data has completed")
        elif ans == "Process Data":
            print("\n 2"), print("Process Data has started"), print("Process Data has completed")
        elif ans == "Visualise Data":
            print("\n 3"), print("Visualise Data has started"), print("Visualise Data has completed")
        elif ans == "Save Data":
            print("\n 4"), print("Saving Data started"), print("Saving Data completed")
        elif ans == "Exit":
            print("\n 5")
            ans = None
        else:
            print("\n Not Valid Choice Try again")

#menu()

def started(operation):
    """
    Task 3:
    """
    # TODO: Your code here
    print(f"{operation} has started.")


started("String parameter")


def completed(operation):
    """
    Task 4:
    """
    # TODO: Your code here
    print(f'{operation} has completed.')

completed("String parameter")


def error(error_msg):
    """
    Task 5:
    """
    # TODO: Your code here
    print(f'Error! {error_msg}.')


error("Its fatal error!")


def source_data_path():
    """
    Task 6:
    """
    # TODO: Your code here
    import pathlib, os
    user_input = input("Please enter the file path: ")
    file = pathlib.Path(user_input)
    if file.exists():
        print(os.path.realpath(file.name)), print("File Found")
    else:
        if user_input.endswith("csv"):
            print("File not found")
        else:
            print("File not found\nFile must be ends with \"csv\"")
        return


#source_data_path()

def process_type():
    """
    Task 7:
    """
    # TODO: Your code here
    ans = True
    while ans:
        x = 'Main Menu'
        print("\n\t\t\t", "-" * len(x), x, "-" * len(x))
        print("""
            How would you like for the file to be processed\n\t\t(Choose from below e.g.\"Retrieve entity\")?
            1.Retrieve entity
            2.Retrieve entity details
            3.Categorise entities by type
            4.Categorise entities by gravity
            5.Summarise entities by orbit
            """)
        ans = input("What would you like to do? :- ")
        if ans == "Retrieve entity":
            print("\n 1")
        elif ans == "Retrieve entity details":
            print("\n 2")
        elif ans == "Categorise entities by type":
            print("\n 3")
        elif ans == "Categorise entities by gravity":
            print("\n 4")
        elif ans == "Summarise entities by orbit":
            print("\n 5")
            ans = None
        else:
            print("\n Not Valid Choice Try again")

#process_type()

def entity_name():
    """
    Task 8:
    """
    # TODO: Your code here
    name = input("Please type the name of an entity:")
    print(name)

#entity_name()

def entity_details():
    """
    Task 9:
    """
    # TODO: Your code here
    a = input('Enter name of entity: ')
    b = list(map(int, input("Integer columns: ").split(',')))
    #return [a, b]
    x = a, b
    print(list(x))

#entity_details()

def list_entity(entity, cols=[]):
    """
    Task 10:
    """
    # TODO: Your code here
    if len(cols) > 0:
        list = [entity[z] for z in cols]
        print(list)
    else:
        print(entity)
    return


list_entity(['Earth', True, 9.8,0,8], [0, 4])


def list_entities(entities, cols=[]):
    """
    Task 11:
    """
    # TODO: Your code here

    if len(cols) > 0:
        list = [entities[z] for z in cols]
        print(list)
    else:
        print(entities)
    return


list_entities(['Earth', True, 9.8, 0, 8], [])



def list_categories():
    """
    Task 12:
    """
    # TODO: Your code here
    d = {"fruits": "apple", "shoe": "addidas"}
    for key, value in d.items():
        print(key, ' : ', value)

list_categories()


def gravity_range():
    """
    Task 13:
    """
    # TODO: Your code here
    t = tuple()
    n = int(input("Total number of values in tuple:- "))
    for i in range(n):
        a = float(input("Enter elements:- "))
        t = t + (a,)
    return min(t), max(t)

#print(gravity_range())


def orbits():
    """
    Task 14:
    """
    # TODO: Your code here
    x = input("Enter a list of entity names : ").split(",")
    return x


#print(orbits())


def visualise():
    """
    Task 15:
    """
    # TODO: Your code here
    x = 'Visualise Menu'
    print("\n\t\t", "-" * len(x), x, "-" * len(x))
    ans = True
    while ans:
        print("""
            How would you like for the data to be visualise\n\t\t(Choose from below e.g.\"Entities by type\")?
            1.Entities by type
            2.Entities by gravity
            3.Summary of orbits
            4.Animate gravities
            """)
        ans = input("\t\tWhat would you like to do?:- ")
        if ans == "Entities by type":
            print("\n\t\t1")
        elif ans == "Entities by gravity":
            print("\n\t\t2")
        elif ans == "Summary of orbits":
            print("\n\t\t3")
        elif ans == "Animate gravities":
            print("\n\t\t4")
            ans = None
        else:
            print("\n Not Valid Choice Try again")


#visualise()


def save():
    """
    Task 16:
    """
    # TODO: Your code here
    x = 'Saving Menu'
    print("\n\t\t", "-" * len(x), x, "-" * len(x))
    ans = True
    while ans:
        print("""
            How would you like for the data to be save\n\t\t(e.g.\"Export as JSON\")?
            1.Export as JSON
            """)
        ans = input("\t\tWhat would you like to do?:- ")
        if ans == "Export as JSON":
            print("\n\t\t1"), print("\t\tData Exporting as JSON Started"), print("\t\tData Exporting as JSON Completed")
            ans = None
        else:
            print("\n Not Valid Choice Try again")


#save()
